@WebServlet으로 서블릿을 URL에 매핑할 때 사용 - 클래스 앞에

서블릿은 늦은 초기화를 사용한다
스프링은 이른 초기화를 사용한다. - 스프링은 서블릿을 발전시킨 것이다.
@WebServlet(urlPatterns={"/hello",  "/hello/*"}, loadOnStartup=1)
미리 초기화를 해두고 싶은 서블릿에 붙일 수 있는 옵션임 - loadOnStartup

매핑 패턴 소개 - React Router사용하는 컨셉
아래 번호는 순번을 의미하므로 1번을 따져서 없으면 2번이  또 없으면 3번이 적용됨
1. exact mapping - /basic/hello.do -> http://localhost/basic/hello.do

2. path mapping - /basic/* ->
-> http://localhost/basic/hello.do
-> http://localhost/basic/hello
-> http://localhost/basic/
-> http://localhost/basic/test

3. extension mapping -  *.do,  *.gd
:확장자가 do로 끝나기만 한다면 내가 가로챌께
-> http://localhost/basic/hello.do
-> http://localhost/basic/login.do
-> http://localhost/basic/logout.do

4.default mapping - / - spring legacy 기본
:위에서 부터 따져보다가 어디에도 해당되지 않으면 디폴트가 적용됨
-> http://localhost/basic/hello.do
-> http://localhost/basic/hello
-> http://localhost/basic/
-> http://localhost/basic/test


스프링에서는 @RequestMapping이 제공된다 - 메소드 앞에온다

@Controller - 컨트롤계층의 역할을 맡게됨 - 어노테이션(@) - annotation
:자바에서는 Reflection API를 지원하고 있음
-> 힙 영역에 로드되어 있는 클래스 타입의 객체를 통해서   필드/메소드/생성자를
접근제어자와  상관없이 사용할 수 있도록 지원하는 API 
-> 컴파일 시점이 아닌 런타임 시점에 동적으로 특정 클래스의 정보를
추출해 주는 프로그래밍 기법을 지원
-> 주로 프레임워크 또는 라이브러리 개발시 사용됨
예) Spring DI(dependency Injection), Test프레임워크(JUnit), JSON 라이브러리
