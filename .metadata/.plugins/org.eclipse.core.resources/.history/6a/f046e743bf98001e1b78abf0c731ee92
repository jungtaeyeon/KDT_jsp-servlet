package com.example.demo.pojo2;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;

import com.example.demo.pojo1.NoticeLogic;

/*
 * upmu[] - 내려갈 때 -> ActionServlet -> BoardController로 연결될 때
 * -> 개선점(pojo3) -> spring -> XXXXHandlerMapping -> BoardController 에서부터 메소드를 쪼갤수는 없나?? 
 * -> 현재는 if문으로 되어있어서 가독성 및 재사용성이 떨어짐
 * pageMove[] - 올라올 때
 */

// 스프링으로 넘어가면 @Controller -> 스프링에서는 클래스 사이의 결합도를 낮추기 위해 상속(implements)을 포기
public class BoardController implements Controller {
	Logger logger = Logger.getLogger(BoardController.class);
	BoardLogic nLogic = new BoardLogic();//이른

	@Override
	public String execute(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		
		return "redirect:/notice/noticeList.jsp"; // webapp을 바라본다.
//		return "forward:/notice/noticeList.jsp"; // webapp - 요청이 유지되는것 으로 판단해서 서블릿이 쥐고있는 값을 jsp에서도 사용할 수 있다.
//		return "/notice/noticeList.jsp"; // WEB-INF/jsp/notice아래
	}

}
